{"version":3,"sources":["features/user/userSlice.js","routes/PrivateRoute.js","routes/AfterLoginRoute.js","components/Header.js","components/ErrorMessage.js","validation/user.js","axios.js","components/Login.js","components/SuccessMessage.js","components/Register.js","components/Dashboard.js","components/WorldMap.js","components/CountryVisitForm.js","components/WorldKnow.js","components/MapPage.js","App.js","features/counter/counterSlice.js","app/store.js","serviceWorker.js","index.js"],"names":["userSlice","createSlice","name","initialState","user","localStorage","getItem","JSON","parse","token","reducers","setUser","state","action","payload","setToken","logout","actions","selectUser","selectToken","PrivateRoute","Component","component","rest","useSelector","render","props","to","AfterLoginRoute","_id","Header","dispatch","useDispatch","className","Button","variant","onClick","removeItem","ErrorMessage","message","signupSchema","yup","shape","required","max","email","matches","min","password","signinSchema","instance","axios","create","baseURL","process","Login","useState","showPassword","setShowPassword","registerErrors","setRegisterErrors","useForm","resolver","yupResolver","register","handleSubmit","errors","onSubmit","data","post","then","setItem","stringify","catch","error","response","err","request","console","log","config","FormControl","InputLabel","htmlFor","Input","id","inputRef","endAdornment","InputAdornment","position","IconButton","type","color","SuccessMessage","Register","successMessage","setSuccessMessage","res","split","Dashboard","tabIndex","setTabIndex","Card","AppBar","Tabs","value","indicatorColor","textColor","aria-label","Tab","label","index","WorldMap","countriesData","setCountriesData","useEffect","a","get","fetchCountriesData","Map","center","lat","lng","zoom","TileLayer","attribution","url","map","countryData","latlng","countries","includes","Marker","key","alpha2Code","Popup","CountryVisitForm","country","setCountry","errorMessage","setErrorMessage","headerConfig","headers","Accept","Authorization","put","onChange","changeCountry","size","WorldKnow","percentageWorldKnow","setPercentageWorldKnow","length","rel","href","target","Slider","MapPage","App","exact","path","counterSlice","increment","decrement","incrementByAmount","configureStore","reducer","counter","counterReducer","userReducer","Boolean","window","location","hostname","match","ReactDOM","StrictMode","store","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.398d8dc1.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nexport const userSlice = createSlice({\r\n  name: \"user\",\r\n  initialState: {\r\n    user: localStorage.getItem(\"user\")\r\n      ? JSON.parse(localStorage.getItem(\"user\"))\r\n      : null,\r\n    token: localStorage.getItem(\"token\")\r\n      ? JSON.parse(localStorage.getItem(\"token\"))\r\n      : null,\r\n  },\r\n  reducers: {\r\n    setUser: (state, action) => {\r\n      state.user = action.payload;\r\n    },\r\n    setToken: (state, action) => {\r\n      state.token = action.payload;\r\n    },\r\n    logout: (state) => {\r\n      state.user = null;\r\n      state.token = null;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setUser, setToken, logout } = userSlice.actions;\r\n\r\nexport const selectUser = (state) => state.user.user;\r\nexport const selectToken = (state) => state.user.token;\r\n\r\nexport default userSlice.reducer;\r\n","import React from \"react\";\r\n\r\n// REACT-REDUX\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectUser } from \"../features/user/userSlice\";\r\n\r\n// REACT-ROUTER-DOM\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nfunction PrivateRoute({ component: Component, ...rest }) {\r\n  const user = useSelector(selectUser);\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        user ? <Component {...props} /> : <Redirect to=\"/\" />\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nexport default PrivateRoute;\r\n","import React from \"react\";\r\n\r\n// REACT-REDUX\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectUser } from \"../features/user/userSlice\";\r\n\r\n// REACT-ROUTER-DOM\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nfunction AfterLoginRoute({ component: Component, ...rest }) {\r\n  const user = useSelector(selectUser);\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        user ? <Redirect to={`/map/${user._id}`} /> : <Component {...props} />\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nexport default AfterLoginRoute;\r\n","import React from \"react\";\r\n\r\n// REACT-REDUX\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { selectUser, logout } from \"../features/user/userSlice\";\r\n\r\n// MATERIAL-UI\r\nimport Button from \"@material-ui/core/Button\";\r\nimport RoomIcon from \"@material-ui/icons/Room\";\r\n\r\n// CSS\r\nimport \"../css/header.css\";\r\n\r\nfunction Header() {\r\n  const user = useSelector(selectUser);\r\n  const dispatch = useDispatch();\r\n\r\n  const onLogout = () => {\r\n    dispatch(logout());\r\n    localStorage.removeItem(\"user\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"header\">\r\n      <div className=\"header__left\">\r\n        <h2>Travel Tracker</h2>\r\n        <RoomIcon />\r\n      </div>\r\n      {user ? (\r\n        <Button variant=\"outlined\" onClick={onLogout}>\r\n          Logout\r\n        </Button>\r\n      ) : null}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\n// MATERIAL-UI\r\nimport WarningIcon from \"@material-ui/icons/Warning\";\r\n\r\n// CSS\r\nimport \"../css/messages.css\";\r\n\r\nfunction ErrorMessage({ message }) {\r\n  return (\r\n    <div>\r\n      {message ? (\r\n        <p className=\"message errorMessage\">\r\n          <WarningIcon /> {message}\r\n        </p>\r\n      ) : null}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ErrorMessage;\r\n","// SCHEMA VALIDATION\r\nimport * as yup from \"yup\";\r\n\r\nexport const signupSchema = yup.object().shape({\r\n  name: yup\r\n    .string()\r\n    .required(\"Name is a required field\")\r\n    .max(32, \"Name must be at most 32 characters\"),\r\n  email: yup\r\n    .string()\r\n    .required(\"Email is a required field\")\r\n    .email(\"Email must be a valid email\")\r\n    .matches(/.+\\@.+\\..+/, \"Email must contain @\")\r\n    .min(4, \"Email must be at least 4 characters long\")\r\n    .max(32, \"Email must be at most 32 characters\"),\r\n  password: yup\r\n    .string()\r\n    .required(\"Password is a required field\")\r\n    .min(8, \"Password must be at least 8 characters long\")\r\n    .matches(\r\n      /(?=.*?[a-z])/,\r\n      \"Password must contain at least a lowercase letter\"\r\n    )\r\n    .matches(\r\n      /(?=.*?[A-Z])/,\r\n      \"Password must contain at least a uppercase letter\"\r\n    )\r\n    .matches(/(?=.*?[0-9])/, \"Password must contain at least one digit\"),\r\n});\r\n\r\nexport const signinSchema = yup.object().shape({\r\n  email: yup\r\n    .string()\r\n    .required(\"Email is a required field\")\r\n    .email(\"Email must be a valid email\")\r\n    .matches(/.+\\@.+\\..+/, \"Email must contain @\")\r\n    .min(4, \"Email must be at least 4 characters long\")\r\n    .max(32, \"Email must be at most 32 characters\"),\r\n  password: yup\r\n    .string()\r\n    .required(\"Password is a required field\")\r\n    .min(8, \"Password must be at least 8 characters long\")\r\n    .matches(\r\n      /(?=.*?[a-z])/,\r\n      \"Password must contain at least a lowercase letter\"\r\n    )\r\n    .matches(\r\n      /(?=.*?[A-Z])/,\r\n      \"Password must contain at least a uppercase letter\"\r\n    )\r\n    .matches(/(?=.*?[0-9])/, \"Password must contain at least one digit\"),\r\n});\r\n","// AXIOS\r\n\r\nimport axios from \"axios\";\r\n\r\nconst instance = axios.create({ baseURL: process.env.REACT_APP_API_BASE_URL });\r\n\r\nexport default instance;\r\n","import React, { useState } from \"react\";\r\n\r\n// REACT-REDUX\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setUser, setToken } from \"../features/user/userSlice\";\r\n\r\n// COMPONENTS\r\nimport ErrorMessage from \"./ErrorMessage\";\r\n\r\n// REACT-HOOK-FORM\r\nimport { useForm } from \"react-hook-form\";\r\n\r\n// VALIDATION\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport { signinSchema } from \"../validation/user\";\r\n\r\n// AXIOS\r\nimport axios from \"../axios\";\r\n\r\n// MATERIAL-UI\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\n// MATERIAL-UI ICONS\r\nimport EmailIcon from \"@material-ui/icons/Email\";\r\nimport Visibility from \"@material-ui/icons/Visibility\";\r\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\r\n\r\n// CSS\r\nimport \"../css/login.css\";\r\n\r\nfunction Login() {\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [registerErrors, setRegisterErrors] = useState(null);\r\n\r\n  const dispatch = useDispatch();\r\n  const { register, handleSubmit, errors } = useForm({\r\n    resolver: yupResolver(signinSchema),\r\n  });\r\n\r\n  const onSignin = (data) => {\r\n    setRegisterErrors(null);\r\n    axios\r\n      .post(`/signin`, data)\r\n      .then(({ data }) => {\r\n        dispatch(setUser(data.user));\r\n        dispatch(setToken(data.token));\r\n        localStorage.setItem(\"user\", JSON.stringify(data.user));\r\n        localStorage.setItem(\"token\", JSON.stringify(data.token));\r\n      })\r\n      .catch((error) => {\r\n        if (error.response) setRegisterErrors(error.response.data.err);\r\n        else if (error.request) console.log(error.request);\r\n        else console.log(\"Error\", error.message);\r\n        console.log(error.config);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"login\">\r\n      <form className=\"login__form\" onSubmit={handleSubmit(onSignin)}>\r\n        <FormControl>\r\n          <InputLabel htmlFor=\"login_email\">Email</InputLabel>\r\n          <Input\r\n            id=\"login_email\"\r\n            name=\"email\"\r\n            inputRef={register}\r\n            endAdornment={\r\n              <InputAdornment position=\"end\">\r\n                <IconButton>\r\n                  <EmailIcon />\r\n                </IconButton>\r\n              </InputAdornment>\r\n            }\r\n          />\r\n          {errors.email ? (\r\n            <ErrorMessage message={errors.email.message} />\r\n          ) : null}\r\n        </FormControl>\r\n        <FormControl>\r\n          <InputLabel htmlFor=\"login_password\">Password</InputLabel>\r\n          <Input\r\n            id=\"login_password\"\r\n            name=\"password\"\r\n            inputRef={register}\r\n            type={showPassword ? \"text\" : \"password\"}\r\n            endAdornment={\r\n              <InputAdornment position=\"end\">\r\n                <IconButton onClick={() => setShowPassword(!showPassword)}>\r\n                  {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                </IconButton>\r\n              </InputAdornment>\r\n            }\r\n          />\r\n          {errors.password ? (\r\n            <ErrorMessage message={errors.password.message} />\r\n          ) : null}\r\n        </FormControl>\r\n        <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n          Login\r\n        </Button>\r\n        {registerErrors ? <ErrorMessage message={registerErrors} /> : null}\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\n\r\n// MATERIAL-UI\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\n\r\n// CSS\r\nimport \"../css/messages.css\";\r\n\r\nfunction SuccessMessage({ message }) {\r\n  return (\r\n    <div>\r\n      {message ? (\r\n        <p className=\"message successMessage\">\r\n          <CheckIcon /> {message}\r\n        </p>\r\n      ) : null}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SuccessMessage;\r\n","import React, { useState } from \"react\";\r\n\r\n// REACT-HOOK-FORM\r\nimport { useForm } from \"react-hook-form\";\r\n\r\n// COMPONENTS\r\nimport ErrorMessage from \"./ErrorMessage\";\r\nimport SuccessMessage from \"./SuccessMessage\";\r\n\r\n// VALIDATION\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport { signupSchema } from \"../validation/user\";\r\n\r\n// AXIOS\r\nimport axios from \"../axios\";\r\n\r\n// MATERIAL-UI\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\n// MATERIAL-UI ICONS\r\nimport PermIdentityIcon from \"@material-ui/icons/PermIdentity\";\r\nimport EmailIcon from \"@material-ui/icons/Email\";\r\nimport Visibility from \"@material-ui/icons/Visibility\";\r\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\r\n\r\n// CSS\r\nimport \"../css/register.css\";\r\n\r\nfunction Register() {\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [registerErrors, setRegisterErrors] = useState(null);\r\n  const [successMessage, setSuccessMessage] = useState(null);\r\n\r\n  const { register, handleSubmit, errors } = useForm({\r\n    resolver: yupResolver(signupSchema),\r\n  });\r\n\r\n  const onRegister = (data) => {\r\n    axios\r\n      .post(`/signup`, data)\r\n      .then((res) => setSuccessMessage(\"Registration was Successful\"))\r\n      .catch((error) => {\r\n        // Error\r\n        if (error.response)\r\n          setRegisterErrors(error.response.data.err.split(\":\")[2]);\r\n        else if (error.request) console.log(error.request);\r\n        else console.log(\"Error\", error.message);\r\n        console.log(error.config);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"register\">\r\n      <form className=\"register__form\" onSubmit={handleSubmit(onRegister)}>\r\n        <FormControl>\r\n          <InputLabel htmlFor=\"register_name\">Name</InputLabel>\r\n          <Input\r\n            id=\"register_name\"\r\n            name=\"name\"\r\n            inputRef={register}\r\n            endAdornment={\r\n              <InputAdornment position=\"end\">\r\n                <IconButton>\r\n                  <PermIdentityIcon />\r\n                </IconButton>\r\n              </InputAdornment>\r\n            }\r\n          />\r\n          {errors.name ? <ErrorMessage message={errors.name.message} /> : null}\r\n        </FormControl>\r\n        <FormControl>\r\n          <InputLabel htmlFor=\"register_email\">Email</InputLabel>\r\n          <Input\r\n            id=\"register_email\"\r\n            name=\"email\"\r\n            inputRef={register}\r\n            endAdornment={\r\n              <InputAdornment position=\"end\">\r\n                <IconButton>\r\n                  <EmailIcon />\r\n                </IconButton>\r\n              </InputAdornment>\r\n            }\r\n          />\r\n          {errors.email ? (\r\n            <ErrorMessage message={errors.email.message} />\r\n          ) : null}\r\n        </FormControl>\r\n        <FormControl>\r\n          <InputLabel htmlFor=\"register_password\">Password</InputLabel>\r\n          <Input\r\n            id=\"register_password\"\r\n            name=\"password\"\r\n            inputRef={register}\r\n            type={showPassword ? \"text\" : \"password\"}\r\n            endAdornment={\r\n              <InputAdornment position=\"end\">\r\n                <IconButton onClick={() => setShowPassword(!showPassword)}>\r\n                  {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                </IconButton>\r\n              </InputAdornment>\r\n            }\r\n          />\r\n          {errors.password ? (\r\n            <ErrorMessage message={errors.password.message} />\r\n          ) : null}\r\n        </FormControl>\r\n        <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n          Register\r\n        </Button>\r\n        {successMessage ? <SuccessMessage message={successMessage} /> : null}\r\n        {registerErrors ? <ErrorMessage message={registerErrors} /> : null}\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Register;\r\n","import React, { useState } from \"react\";\r\n\r\n// MATERIAL-UI\r\nimport Card from \"@material-ui/core/Card\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\n\r\n// REACT-SWIPEABLE-VIEWS\r\nimport SwipeableViews from \"react-swipeable-views\";\r\n\r\n// COMPONENTS\r\nimport Login from \"./Login\";\r\nimport Register from \"./Register\";\r\n\r\n// CSS\r\nimport \"../css/dashboard.css\";\r\n\r\nfunction Dashboard() {\r\n  const [tabIndex, setTabIndex] = useState(0);\r\n\r\n  return (\r\n    <div className=\"dashboard\">\r\n      <Card className=\"dashboard__container\">\r\n        <div className=\"dashboard__containerText\">\r\n          <h1>Join us</h1>\r\n          <h4>\r\n            and have the opportunity to know how much percent you know in the\r\n            world\r\n          </h4>\r\n        </div>\r\n        <div className=\"tabs\">\r\n          <AppBar position=\"static\" color=\"default\">\r\n            <Tabs\r\n              value={tabIndex}\r\n              indicatorColor=\"primary\"\r\n              textColor=\"primary\"\r\n              variant=\"fullWidth\"\r\n              aria-label=\"full width tabs example\"\r\n            >\r\n              <Tab label=\"Login\" onClick={() => setTabIndex(0)} />\r\n              <Tab label=\"Register\" onClick={() => setTabIndex(1)} />\r\n            </Tabs>\r\n          </AppBar>\r\n          <SwipeableViews index={tabIndex}>\r\n            <Login />\r\n            <Register />\r\n          </SwipeableViews>\r\n        </div>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\n// REACT-REDUX\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectUser } from \"../features/user/userSlice\";\r\n\r\n// REACT-LEAFLET\r\nimport { Map, TileLayer, Marker, Popup } from \"react-leaflet\";\r\n\r\n// AXIOS\r\nimport axios from \"../axios\";\r\n\r\n// CSS\r\nimport \"../css/worldMap.css\";\r\n\r\nfunction WorldMap() {\r\n  const [countriesData, setCountriesData] = useState([]);\r\n  const user = useSelector(selectUser);\r\n\r\n  useEffect(() => {\r\n    const fetchCountriesData = async () => {\r\n      const { data } = await axios.get(process.env.REACT_APP_COUNTRIES_API);\r\n      setCountriesData(data);\r\n    };\r\n    fetchCountriesData();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"worldMap\">\r\n      <Map center={{ lat: 34.80746, lng: -40.4796 }} zoom={2}>\r\n        <TileLayer\r\n          attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n        />\r\n        {countriesData.map((countryData) => {\r\n          if (\r\n            countryData.latlng[0] &&\r\n            countryData.latlng[1] &&\r\n            user.countries.includes(countryData.name)\r\n          ) {\r\n            return (\r\n              <Marker\r\n                key={countryData.alpha2Code}\r\n                position={countryData.latlng}\r\n              >\r\n                <Popup>{countryData.name}</Popup>\r\n              </Marker>\r\n            );\r\n          }\r\n        })}\r\n      </Map>\r\n      <div className=\"test\"></div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default WorldMap;\r\n","import React, { useState } from \"react\";\r\n\r\n// REACT-REDUX\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { selectUser, selectToken, setUser } from \"../features/user/userSlice\";\r\n\r\n// COMPONENTS\r\nimport ErrorMessage from \"./ErrorMessage\";\r\n\r\n// REACT-HOOK-FORM\r\nimport { useForm } from \"react-hook-form\";\r\n\r\n// REACT COUNTRIES\r\nimport { CountryDropdown } from \"react-country-region-selector\";\r\n\r\n// AXIOS\r\nimport axios from \"../axios\";\r\n\r\n// MATERIAL-UI\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\n// CSS\r\nimport \"../css/countryVisitForm.css\";\r\n\r\nfunction CountryVisitForm() {\r\n  const user = useSelector(selectUser);\r\n  const token = useSelector(selectToken);\r\n  const dispatch = useDispatch();\r\n  const { handleSubmit } = useForm();\r\n  const [country, setCountry] = useState(\"\");\r\n  const [errorMessage, setErrorMessage] = useState(null);\r\n\r\n  const headerConfig = {\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  };\r\n\r\n  const onVisitSubmit = () => {\r\n    if (country !== \"\") {\r\n      if (!user.countries.includes(country)) {\r\n        axios\r\n          .post(`/country/${user._id}`, { country: country }, headerConfig)\r\n          .then(({ data }) => {\r\n            dispatch(setUser(data.user));\r\n            localStorage.setItem(\"user\", JSON.stringify(data.user));\r\n          })\r\n          .catch((error) => {\r\n            if (error.response) setErrorMessage(error.response.data.err);\r\n            else if (error.request) console.log(error.request);\r\n            else console.log(\"Error\", error.message);\r\n            console.log(error.config);\r\n          });\r\n      } else {\r\n        axios\r\n          .put(`/country/${user._id}`, { country: country }, headerConfig)\r\n          .then(({ data }) => {\r\n            dispatch(setUser(data.user));\r\n            localStorage.setItem(\"user\", JSON.stringify(data.user));\r\n          })\r\n          .catch((error) => {\r\n            if (error.response) setErrorMessage(error.response.data.err);\r\n            else if (error.request) console.log(error.request, 1);\r\n            else console.log(\"Error\", error.message, 2);\r\n            console.log(error.config, 3);\r\n          });\r\n      }\r\n    } else setErrorMessage(\"Country must be selected\");\r\n  };\r\n\r\n  const changeCountry = (country) => {\r\n    setCountry(country);\r\n    setErrorMessage(null);\r\n  };\r\n\r\n  return (\r\n    <form className=\"countryVisitForm\" onSubmit={handleSubmit(onVisitSubmit)}>\r\n      <h2>Country Visit Form</h2>\r\n      <CountryDropdown\r\n        value={country}\r\n        onChange={(country) => changeCountry(country)}\r\n      />\r\n      <Button color=\"primary\" variant=\"contained\" size=\"small\" type=\"Submit\">\r\n        {user.countries.includes(country) ? \"Remove Visited\" : \"Add Visited\"}\r\n      </Button>\r\n      {errorMessage ? <ErrorMessage message={errorMessage} /> : null}\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default CountryVisitForm;\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\n// REACT-REDUX\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectUser } from \"../features/user/userSlice\";\r\n\r\n// MATERIAL-UI\r\nimport Slider from \"@material-ui/core/Slider\";\r\n\r\n// CSS\r\nimport \"../css/worldKnow.css\";\r\n\r\nfunction WorldKnow() {\r\n  const user = useSelector(selectUser);\r\n  const [percentageWorldKnow, setPercentageWorldKnow] = useState(0);\r\n\r\n  useEffect(() => {\r\n    setPercentageWorldKnow((user.countries.length * 100) / 250);\r\n  }, [user.countries]);\r\n\r\n  return (\r\n    <div className=\"worldKnow\">\r\n      <h2>Percentage of known world</h2>\r\n      <p>\r\n        according to{\" \"}\r\n        <a\r\n          rel=\"noopener noreferrer\"\r\n          href=\"https://en.wikipedia.org/wiki/ISO_3166-1#Current_codes\"\r\n          target=\"_blank\"\r\n        >\r\n          ISO 3166-1\r\n        </a>\r\n      </p>\r\n\r\n      <h1>{percentageWorldKnow} %</h1>\r\n      <Slider value={percentageWorldKnow} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default WorldKnow;\r\n","import React from \"react\";\r\n\r\n// COMPONENTS\r\nimport WorldMap from \"./WorldMap\";\r\nimport CountryVisitForm from \"./CountryVisitForm\";\r\nimport WorldKnow from \"./WorldKnow\";\r\n\r\n// CSS\r\nimport \"../css/mapPage.css\";\r\n\r\nfunction MapPage() {\r\n  return (\r\n    <div className=\"mapPage\">\r\n      <WorldMap />\r\n      <div className=\"mapPage__rightSide\">\r\n        <CountryVisitForm />\r\n        <WorldKnow />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MapPage;\r\n","import React from \"react\";\r\n\r\n// REACT-ROUTER-DOM\r\nimport { BrowserRouter, Switch } from \"react-router-dom\";\r\n\r\n// PRIVATE ROUTE\r\nimport PrivateRoute from \"./routes/PrivateRoute\";\r\n\r\n// AFTER LOGIN ROUTE\r\nimport AfterLoginRoute from \"./routes/AfterLoginRoute\";\r\n\r\n// COMPONENTS\r\nimport Header from \"./components/Header\";\r\nimport Dashboard from \"./components/Dashboard\";\r\nimport MapPage from \"./components/MapPage\";\r\n\r\n// CSS\r\nimport \"./css/App.css\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Header />\r\n      <BrowserRouter>\r\n        <Switch>\r\n          <AfterLoginRoute component={Dashboard} exact path=\"/\" />\r\n          <PrivateRoute component={MapPage} exact path=\"/map/:userId\" />\r\n        </Switch>\r\n      </BrowserRouter>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const counterSlice = createSlice({\r\n  name: 'counter',\r\n  initialState: {\r\n    value: 0,\r\n  },\r\n  reducers: {\r\n    increment: state => {\r\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\r\n      // doesn't actually mutate the state because it uses the Immer library,\r\n      // which detects changes to a \"draft state\" and produces a brand new\r\n      // immutable state based off those changes\r\n      state.value += 1;\r\n    },\r\n    decrement: state => {\r\n      state.value -= 1;\r\n    },\r\n    incrementByAmount: (state, action) => {\r\n      state.value += action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { increment, decrement, incrementByAmount } = counterSlice.actions;\r\n\r\n// The function below is called a thunk and allows us to perform async logic. It\r\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\r\n// will call the thunk with the `dispatch` function as the first argument. Async\r\n// code can then be executed and other actions can be dispatched\r\nexport const incrementAsync = amount => dispatch => {\r\n  setTimeout(() => {\r\n    dispatch(incrementByAmount(amount));\r\n  }, 1000);\r\n};\r\n\r\n// The function below is called a selector and allows us to select a value from\r\n// the state. Selectors can also be defined inline where they're used instead of\r\n// in the slice file. For example: `useSelector((state) => state.counter.value)`\r\nexport const selectCount = state => state.counter.value;\r\n\r\nexport default counterSlice.reducer;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport counterReducer from \"../features/counter/counterSlice\";\r\nimport userReducer from \"../features/user/userSlice\";\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    counter: counterReducer,\r\n    user: userReducer,\r\n  },\r\n});\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./css/index.css\";\r\nimport App from \"./App\";\r\nimport store from \"./app/store\";\r\nimport { Provider } from \"react-redux\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}